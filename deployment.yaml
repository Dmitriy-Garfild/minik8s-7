---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep1
  labels:
    task: one
    tier: homework
  annotations:
    container1: nginx
    container2: multitools
  namespace: netology
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: nginx-multitool
  template:
    metadata:
      labels:
        app: nginx-multitool
    spec:
      containers:
        - name: nginx
          image: nginx:1.24.0
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
            requests:
              memory: "64Mi"
              cpu: "250m"
          ports:
            - name: nginx-web
              containerPort: 80
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 10
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 4
          volumeMounts:
            - name: nginx-page
              mountPath: "/usr/share/nginx/html"
        - name: multitool
          image: praqma/network-multitool:alpine-extra
          resources:
            limits:
              memory: "128Mi"
              cpu: "450m"
            requests:
              memory: "32Mi"
              cpu: "150m"
          env:
            - name: HTTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: config-multitool
                  key: http
            - name: HTTPS_PORT
              valueFrom:
                configMapKeyRef:
                  name: config-multitool
                  key: https
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 2
      volumes:
        - name:  nginx-page
          configMap:
            name: config-nginx
...